{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/packages/listRow/ListRow.js\";\nimport React from \"react\";\nimport \"./ListRoleStyle.css\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListRow = ({\n  dataList,\n  tableHeads,\n  tableCells,\n  toggleDeleteModal,\n  isEditable,\n  listRowTitle,\n  editableLink\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"user_profile_list_title\",\n      children: listRowTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableHeads.map((tableHead, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: tableHead\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataList.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              fontSize: 20,\n              padding: 15\n            },\n            children: [tableCells(data), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [toggleDeleteModal && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"delete\",\n                onClick: () => toggleDeleteModal(data.id),\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }, this), isEditable === true && /*#__PURE__*/_jsxDEV(Link, {\n                to: `${editableLink}/${data.title || data.id}`,\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"edit\",\n                  icon: faEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ListRow;\nexport default ListRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListRow\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/packages/listRow/ListRow.js"],"names":["React","moment","FontAwesomeIcon","faEdit","faTrash","Link","ListRow","dataList","tableHeads","tableCells","toggleDeleteModal","isEditable","listRowTitle","editableLink","map","tableHead","index","data","fontSize","padding","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mCAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,QADe;AAEfC,EAAAA,UAFe;AAGfC,EAAAA,UAHe;AAIfC,EAAAA,iBAJe;AAKfC,EAAAA,UALe;AAMfC,EAAAA,YANe;AAOfC,EAAAA;AAPe,CAAD,KAQV;AACJ,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA,gBAAyCD;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,oBACGJ,UAAU,CAACM,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,gCAAO;AAAA,wBAAiBD;AAAjB,eAASC,KAAT;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGT,QAAQ,CAACO,GAAT,CAAa,CAACG,IAAD,EAAOD,KAAP,KAAiB;AAC7B,8BACE;AAAI,YAAA,KAAK,EAAE;AAAEE,cAAAA,QAAQ,EAAE,EAAZ;AAAgBC,cAAAA,OAAO,EAAE;AAAzB,aAAX;AAAA,uBACGV,UAAU,CAACQ,IAAD,CADb,eAEE;AAAA,yBACGP,iBAAiB,iBAChB,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,QADZ;AAEE,gBAAA,OAAO,EAAE,MAAMA,iBAAiB,CAACO,IAAI,CAACG,EAAN,CAFlC;AAGE,gBAAA,IAAI,EAAEhB;AAHR;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAQGO,UAAU,KAAK,IAAf,iBACC,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,GAAEE,YAAa,IAAGI,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACG,EAAG,EAAnD;AAAA,wCACE,QAAC,eAAD;AAAiB,kBAAA,SAAS,EAAC,MAA3B;AAAkC,kBAAA,IAAI,EAAEjB;AAAxC;AAAA;AAAA;AAAA;AAAA,wBADF,EACqD,GADrD;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAA+Ca,KAA/C;AAAA;AAAA;AAAA;AAAA,kBADF;AAmBD,SApBA;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqCD,CA9CD;;KAAMV,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport \"./ListRoleStyle.css\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst ListRow = ({\n  dataList,\n  tableHeads,\n  tableCells,\n  toggleDeleteModal,\n  isEditable,\n  listRowTitle,\n  editableLink,\n}) => {\n  return (\n    <>\n      <h2 className=\"user_profile_list_title\">{listRowTitle}</h2>\n      <table className=\"task\">\n        <thead>\n          <tr>\n            {tableHeads.map((tableHead, index) => {\n              return <th key={index}>{tableHead}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {dataList.map((data, index) => {\n            return (\n              <tr style={{ fontSize: 20, padding: 15 }} key={index}>\n                {tableCells(data)}\n                <td>\n                  {toggleDeleteModal && (\n                    <FontAwesomeIcon\n                      className=\"delete\"\n                      onClick={() => toggleDeleteModal(data.id)}\n                      icon={faTrash}\n                    />\n                  )}\n                  {isEditable === true && (\n                    <Link to={`${editableLink}/${data.title || data.id}`}>\n                      <FontAwesomeIcon className=\"edit\" icon={faEdit} />{\" \"}\n                    </Link>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ListRow;\n"]},"metadata":{},"sourceType":"module"}