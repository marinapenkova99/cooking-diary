{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/newsletter/list/NewsletterEmailsListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewsletterEmailsList from \"./components/NewsletterEmailsList\";\nimport axios from \"axios\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"../../recipes/userProfileList/components/DeleteModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsletterEmailsListContainer = props => {\n  _s();\n\n  const [emails, setEmails] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedEmailToDelete, setSelectedEmailToDelete] = useState(\"\");\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const getCategories = () => {\n    setIsLoading(true);\n    axios.get(`http://localhost:4000/newsletter/email`).then(res => {\n      setEmails(res.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  const deleteEmail = email => {\n    axios.delete(`http://localhost:4000/newsletter/email/${email}`).then(res => {\n      setEmails(res.data);\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = email => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedEmailToDelete(email);\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(UserLayout, {\n      children: /*#__PURE__*/_jsxDEV(NewsletterEmailsList, {\n        toggleDeleteModal: toggleDeleteModal,\n        emails: emails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isOpenDeleteModal && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      isModalOpen: isOpenDeleteModal,\n      closeModal: setIsOpenDeleteModal(!isOpenDeleteModal),\n      deleteTask: () => deleteEmail(selectedEmailToDelete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsletterEmailsListContainer, \"/w7kQJzNgYnb9zOteYLlQOrk3Y8=\");\n\n_c = NewsletterEmailsListContainer;\nexport default NewsletterEmailsListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterEmailsListContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/newsletter/list/NewsletterEmailsListContainer.js"],"names":["React","useEffect","useState","NewsletterEmailsList","axios","UserLayout","DeleteModal","NewsletterEmailsListContainer","props","emails","setEmails","isLoading","setIsLoading","isOpenDeleteModal","setIsOpenDeleteModal","selectedEmailToDelete","setSelectedEmailToDelete","getCategories","get","then","res","data","catch","err","console","log","response","deleteEmail","email","delete","window","location","reload","toggleDeleteModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;AAEA,MAAMC,6BAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACa,qBAAD,EAAwBC,wBAAxB,IAAoDd,QAAQ,CAAC,EAAD,CAAlE;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,MAAM;AAC1BL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,KAAK,CACFc,GADH,CACQ,wCADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,SAAS,CAACU,GAAG,CAACC,IAAL,CAAT;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGU,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD,KARH;AASD,GAXD;;AAYA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BxB,IAAAA,KAAK,CACFyB,MADH,CACW,0CAAyCD,KAAM,EAD1D,EAEGT,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,SAAS,CAACU,GAAG,CAACC,IAAL,CAAT;AACD,KAJH;AAKAS,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAPD;;AASA,QAAMC,iBAAiB,GAAIL,KAAD,IAAW;AACnCd,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACAG,IAAAA,wBAAwB,CAACY,KAAD,CAAxB;AACD,GAHD;;AAIA,MAAIjB,SAAJ,EAAe,OAAO,IAAP;AACf,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,oBAAD;AACE,QAAA,iBAAiB,EAAEsB,iBADrB;AAEE,QAAA,MAAM,EAAExB;AAFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAOGI,iBAAiB,iBAChB,QAAC,WAAD;AACE,MAAA,WAAW,EAAEA,iBADf;AAEE,MAAA,UAAU,EAAEC,oBAAoB,CAAC,CAACD,iBAAF,CAFlC;AAGE,MAAA,UAAU,EAAE,MAAMc,WAAW,CAACZ,qBAAD;AAH/B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApDD;;GAAMR,6B;;KAAAA,6B;AAsDN,eAAeA,6BAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewsletterEmailsList from \"./components/NewsletterEmailsList\";\nimport axios from \"axios\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"../../recipes/userProfileList/components/DeleteModal\";\n\nconst NewsletterEmailsListContainer = (props) => {\n  const [emails, setEmails] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedEmailToDelete, setSelectedEmailToDelete] = useState(\"\");\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const getCategories = () => {\n    setIsLoading(true);\n    axios\n      .get(`http://localhost:4000/newsletter/email`)\n      .then((res) => {\n        setEmails(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  const deleteEmail = (email) => {\n    axios\n      .delete(`http://localhost:4000/newsletter/email/${email}`)\n      .then((res) => {\n        setEmails(res.data);\n      });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = (email) => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedEmailToDelete(email);\n  };\n  if (isLoading) return null;\n  return (\n    <div className=\"page_wrapper\">\n      <UserLayout>\n        <NewsletterEmailsList\n          toggleDeleteModal={toggleDeleteModal}\n          emails={emails}\n        />\n      </UserLayout>\n      {isOpenDeleteModal && (\n        <DeleteModal\n          isModalOpen={isOpenDeleteModal}\n          closeModal={setIsOpenDeleteModal(!isOpenDeleteModal)}\n          deleteTask={() => deleteEmail(selectedEmailToDelete)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewsletterEmailsListContainer;\n"]},"metadata":{},"sourceType":"module"}