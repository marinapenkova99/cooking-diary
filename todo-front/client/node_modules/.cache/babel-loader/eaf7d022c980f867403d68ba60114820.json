{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/textEditor/TextEditor.js\";\nimport React from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport CustomToolbar from \"./CustomToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Block = Quill.import(\"blots/block\");\n\nclass BlockBlot extends Block {\n  static create() {\n    let node = super.create();\n    node.setAttribute(\"class\", \"custom-div\");\n    return node;\n  }\n\n}\n\nBlockBlot.blotName = \"custom\";\nBlockBlot.tagName = \"div\";\nQuill.register(\"formats/custom\", BlockBlot);\n\nconst makeId = length => {\n  let result = \"container_\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  let charactersLength = characters.length;\n\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerId = makeId(5);\n    this.modules = {\n      toolbar: {\n        container: \"#\" + this.containerId\n      }\n    };\n    this.state = {\n      isRawHtml: false\n    };\n  }\n\n  render() {\n    let {\n      label,\n      value,\n      onTextEditorChange,\n      placeholder\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"react_quill_label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-editor\",\n          children: [/*#__PURE__*/_jsxDEV(CustomToolbar, {\n            id: this.containerId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            onChange: onTextEditorChange,\n            value: value,\n            modules: this.modules,\n            formats: TextEditor.formats,\n            bounds: \".app\",\n            placeholder: placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTextEditor.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"color\", \"custom\"];\nexport default TextEditor;","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/textEditor/TextEditor.js"],"names":["React","ReactQuill","Quill","CustomToolbar","Block","import","BlockBlot","create","node","setAttribute","blotName","tagName","register","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","TextEditor","Component","constructor","props","containerId","modules","toolbar","container","state","isRawHtml","render","label","value","onTextEditorChange","placeholder","formats"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport CustomToolbar from \"./CustomToolbar\";\n\nlet Block = Quill.import(\"blots/block\");\nclass BlockBlot extends Block {\n  static create() {\n    let node = super.create();\n    node.setAttribute(\"class\", \"custom-div\");\n    return node;\n  }\n}\nBlockBlot.blotName = \"custom\";\nBlockBlot.tagName = \"div\";\n\nQuill.register(\"formats/custom\", BlockBlot);\n\nconst makeId = (length) => {\n  let result = \"container_\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  let charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerId = makeId(5);\n    this.modules = {\n      toolbar: {\n        container: \"#\" + this.containerId,\n      },\n    };\n    this.state = {\n      isRawHtml: false,\n    };\n  }\n\n  render() {\n    let { label, value, onTextEditorChange, placeholder } = this.props;\n    return (\n      <div>\n        <div>\n          {label && <label className=\"react_quill_label\">{label}</label>}\n\n          <div className=\"text-editor\">\n            <CustomToolbar id={this.containerId} />\n            <ReactQuill\n              theme={\"snow\"}\n              onChange={onTextEditorChange}\n              value={value}\n              modules={this.modules}\n              formats={TextEditor.formats}\n              bounds={\".app\"}\n              placeholder={placeholder}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nTextEditor.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n  \"color\",\n  \"custom\",\n];\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}