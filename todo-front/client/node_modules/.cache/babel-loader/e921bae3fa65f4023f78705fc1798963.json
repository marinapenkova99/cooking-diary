{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/preview/RecipePreviewContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipePreviewContainer = props => {\n  _s();\n\n  const [recipe, setRecipe] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n  const getRecipe = () => {\n    setLoading(true);\n    axios.get(`http://localhost:4000/tasks/${props.id}`).then(res => {\n      {\n        console.log(res);\n      }\n      setRecipe(res.data[0]);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: recipe.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(RecipePreviewContainer, \"s/9S0cUY3R4D+O2rOGJcE+eb/po=\");\n\n_c = RecipePreviewContainer;\nexport default _c2 = withRouter(RecipePreviewContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecipePreviewContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/preview/RecipePreviewContainer.js"],"names":["React","useEffect","useState","axios","withRouter","RecipePreviewContainer","props","recipe","setRecipe","isLoading","setLoading","getRecipe","get","id","then","res","console","log","data","catch","err","response","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,UAAZ,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,MAAM;AACtBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,KAAK,CACFS,GADH,CACQ,+BAA8BN,KAAK,CAACO,EAAG,EAD/C,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACDP,MAAAA,SAAS,CAACO,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAD,CAAT;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH,EASGS,KATH,CASUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,QAAhB;AACD,KAXH;AAYD,GAdD;;AAeA,MAAIZ,SAAJ,EAAe,OAAO,IAAP;AACf,sBAAO;AAAA,cAAMF,MAAM,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBD;;GAAMjB,sB;;KAAAA,sB;AA2BN,qBAAeD,UAAU,CAACC,sBAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nconst RecipePreviewContainer = (props) => {\n  const [recipe, setRecipe] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n  const getRecipe = () => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:4000/tasks/${props.id}`)\n      .then((res) => {\n        {\n          console.log(res);\n        }\n        setRecipe(res.data[0]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  if (isLoading) return null;\n  return <div>{recipe.title}</div>;\n};\n\nexport default withRouter(RecipePreviewContainer);\n"]},"metadata":{},"sourceType":"module"}