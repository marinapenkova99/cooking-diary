{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/category/filteredCategoryList/FilteredCategoryListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport FilteredCategoryList from \"./components/FilteredCategoryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilteredCategoryListContainer = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  useEffect(() => {\n    fetchRecipes();\n  }, [props.match.params.id]);\n\n  const fetchRecipes = () => {\n    setisLoading(true);\n    axios.get(`http://localhost:4000/tasks`).then(res => {\n      const filteredRecipes = res.data.filter(recipe => recipe.categoryId === props.match.params.id);\n      setRecipes(filteredRecipes);\n      setisLoading(false);\n    }).catch(e => console.error(e));\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(FilteredCategoryList, {\n    recipes: recipes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FilteredCategoryListContainer, \"mL3LsHpJpqtGvS1yztTx9MwgDpI=\");\n\n_c = FilteredCategoryListContainer;\nFilteredCategoryListContainer.propTypes = {};\nexport default _c2 = withRouter(FilteredCategoryListContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilteredCategoryListContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/category/filteredCategoryList/FilteredCategoryListContainer.js"],"names":["React","useEffect","useState","axios","withRouter","FilteredCategoryList","FilteredCategoryListContainer","props","recipes","setRecipes","isLoading","setisLoading","fetchRecipes","match","params","id","get","then","res","filteredRecipes","data","filter","recipe","categoryId","catch","e","console","error","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;;;AAEA,MAAMC,6BAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAFM,CAAT;;AAIA,QAAMH,YAAY,GAAG,MAAM;AACzBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,KAAK,CACFa,GADH,CACQ,6BADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,eAAe,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAT,CACrBC,MAAD,IAAYA,MAAM,CAACC,UAAP,KAAsBhB,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,EAD/B,CAAxB;AAGAN,MAAAA,UAAU,CAACU,eAAD,CAAV;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARH,EASGa,KATH,CASUC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAThB;AAUD,GAZD;;AAaA,MAAIf,SAAJ,EAAe,OAAO,IAAP;AACf,sBAAO,QAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBD;;GAAMF,6B;;KAAAA,6B;AAyBNA,6BAA6B,CAACsB,SAA9B,GAA0C,EAA1C;AAEA,qBAAexB,UAAU,CAACE,6BAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport FilteredCategoryList from \"./components/FilteredCategoryList\";\n\nconst FilteredCategoryListContainer = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n\n  useEffect(() => {\n    fetchRecipes();\n  }, [props.match.params.id]);\n\n  const fetchRecipes = () => {\n    setisLoading(true);\n    axios\n      .get(`http://localhost:4000/tasks`)\n      .then((res) => {\n        const filteredRecipes = res.data.filter(\n          (recipe) => recipe.categoryId === props.match.params.id\n        );\n        setRecipes(filteredRecipes);\n        setisLoading(false);\n      })\n      .catch((e) => console.error(e));\n  };\n  if (isLoading) return null;\n  return <FilteredCategoryList recipes={recipes} />;\n};\n\nFilteredCategoryListContainer.propTypes = {};\n\nexport default withRouter(FilteredCategoryListContainer);\n"]},"metadata":{},"sourceType":"module"}