{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/userProfileList/UserProfileRecipesListContainer.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport TaskEditContainer from \"../../tasks/taskEdit/TaskEditContainer\";\nimport CreateTaskContainer from \"../../tasks/taskCreate/CreateTaskContainer\";\nimport UserProfileListRecipes from \"./components/UserProfileListRecipes\";\nimport \"./UserProfileRecipesListStyle.css\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserProfileRecipesListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchTasks();\n    };\n\n    this.fetchTasks = () => {\n      axios.get(`http://localhost:4000/tasks`).then(res => {\n        this.setState({\n          tasks: res.data\n        });\n      });\n    };\n\n    this.deleteTask = id => {\n      axios.delete(`http://localhost:4000/tasks/${id}`).then(res => {\n        this.setState({\n          tasks: res.data\n        });\n      });\n      window.location.reload();\n    };\n\n    this.toggleEditModal = id => {\n      this.setState({\n        isOpenModal: !this.state.isOpenModal\n      });\n      this.setState({\n        selectedTask: id\n      });\n    };\n\n    this.toggleCreateModal = () => {\n      this.setState({\n        isOpenCreateModal: !this.state.isOpenCreateModal\n      });\n    };\n\n    this.toggleDeleteModal = id => {\n      this.setState({\n        isOpenDeleteModal: !this.state.isOpenDeleteModal\n      });\n      this.setState({\n        selectedTaskToDelete: id\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      isOpenModal: false,\n      selectedTask: 0,\n      isOpenCreateModal: false,\n      isOpenDeleteModal: false,\n      selectedTaskToDelete: 0\n    };\n  }\n\n  render() {\n    const {\n      isOpenModal,\n      isOpenCreateModal,\n      tasks,\n      isOpenDeleteModal,\n      selectedTaskToDelete\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(UserLayout, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks_header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserProfileListRecipes, {\n          toggleDeleteModal: this.toggleDeleteModal,\n          tasks: tasks,\n          toggleEditModal: this.toggleEditModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), isOpenModal === true && /*#__PURE__*/_jsxDEV(TaskEditContainer, {\n        isModalOpen: isOpenModal,\n        closeModal: () => this.toggleEditModal(this.state.selectedTask),\n        id: this.state.selectedTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), isOpenCreateModal === true && /*#__PURE__*/_jsxDEV(CreateTaskContainer, {\n        closeModal: () => this.toggleCreateModal(),\n        isModalOpen: isOpenCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), isOpenDeleteModal === true && /*#__PURE__*/_jsxDEV(DeleteModal, {\n        isModalOpen: isOpenDeleteModal,\n        closeModal: () => this.toggleDeleteModal(selectedTaskToDelete),\n        deleteTask: () => this.deleteTask(selectedTaskToDelete)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserProfileRecipesListContainer;","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/userProfileList/UserProfileRecipesListContainer.js"],"names":["axios","React","TaskEditContainer","CreateTaskContainer","UserProfileListRecipes","DeleteModal","UserLayout","UserProfileRecipesListContainer","Component","constructor","props","componentDidMount","fetchTasks","get","then","res","setState","tasks","data","deleteTask","id","delete","window","location","reload","toggleEditModal","isOpenModal","state","selectedTask","toggleCreateModal","isOpenCreateModal","toggleDeleteModal","isOpenDeleteModal","selectedTaskToDelete","render"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport TaskEditContainer from \"../../tasks/taskEdit/TaskEditContainer\";\nimport CreateTaskContainer from \"../../tasks/taskCreate/CreateTaskContainer\";\nimport UserProfileListRecipes from \"./components/UserProfileListRecipes\";\nimport \"./UserProfileRecipesListStyle.css\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\n\nclass UserProfileRecipesListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: [],\n      isOpenModal: false,\n      selectedTask: 0,\n      isOpenCreateModal: false,\n      isOpenDeleteModal: false,\n      selectedTaskToDelete: 0,\n    };\n  }\n  componentDidMount = () => {\n    this.fetchTasks();\n  };\n  fetchTasks = () => {\n    axios.get(`http://localhost:4000/tasks`).then((res) => {\n      this.setState({ tasks: res.data });\n    });\n  };\n  deleteTask = (id) => {\n    axios.delete(`http://localhost:4000/tasks/${id}`).then((res) => {\n      this.setState({ tasks: res.data });\n    });\n    window.location.reload();\n  };\n  toggleEditModal = (id) => {\n    this.setState({ isOpenModal: !this.state.isOpenModal });\n    this.setState({ selectedTask: id });\n  };\n  toggleCreateModal = () => {\n    this.setState({ isOpenCreateModal: !this.state.isOpenCreateModal });\n  };\n  toggleDeleteModal = (id) => {\n    this.setState({ isOpenDeleteModal: !this.state.isOpenDeleteModal });\n    this.setState({ selectedTaskToDelete: id });\n  };\n\n  render() {\n    const {\n      isOpenModal,\n      isOpenCreateModal,\n      tasks,\n      isOpenDeleteModal,\n      selectedTaskToDelete,\n    } = this.state;\n    return (\n      <div className=\"page_wrapper\">\n        <UserLayout>\n          <div className=\"tasks_header\">\n            <h2>Tasks</h2>\n            {/*<button onClick={() => this.toggleCreateModal()}>Create</button>*/}\n          </div>\n          <UserProfileListRecipes\n            toggleDeleteModal={this.toggleDeleteModal}\n            tasks={tasks}\n            toggleEditModal={this.toggleEditModal}\n          />\n        </UserLayout>\n\n        {isOpenModal === true && (\n          <TaskEditContainer\n            isModalOpen={isOpenModal}\n            closeModal={() => this.toggleEditModal(this.state.selectedTask)}\n            id={this.state.selectedTask}\n          />\n        )}\n        {isOpenCreateModal === true && (\n          <CreateTaskContainer\n            closeModal={() => this.toggleCreateModal()}\n            isModalOpen={isOpenCreateModal}\n          />\n        )}\n        {isOpenDeleteModal === true && (\n          <DeleteModal\n            isModalOpen={isOpenDeleteModal}\n            closeModal={() => this.toggleDeleteModal(selectedTaskToDelete)}\n            deleteTask={() => this.deleteTask(selectedTaskToDelete)}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default UserProfileRecipesListContainer;\n"]},"metadata":{},"sourceType":"module"}