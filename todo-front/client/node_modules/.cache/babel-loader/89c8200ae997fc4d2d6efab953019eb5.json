{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/recipes/userProfileList/UserProfileRecipesListContainer.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport UserProfileListRecipes from \"./components/UserProfileListRecipes\";\nimport \"./UserProfileRecipesListStyle.css\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfileRecipesListContainer = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedTaskToDelete, setSelectedTaskToDelete] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  const fetchRecipes = () => {\n    setLoading(true);\n    axios.get(`http://localhost:4000/recipes`).then(res => {\n      setRecipes(res.data);\n      setLoading(false);\n    }).catch(e => console.error(e));\n  };\n\n  const deleteTask = id => {\n    axios.delete(`http://localhost:4000/recipes/${id}`).then(res => {\n      setRecipes(res.data);\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = id => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedTaskToDelete(id);\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(UserLayout, {\n      children: [/*#__PURE__*/_jsxDEV(ListRow, {\n        data: recipes,\n        listRowTitle: \"Моите рецепти\",\n        isEditable: true,\n        toggleDeleteModal: toggleDeleteModal,\n        tableHeads: [\"Id\", \"Заглавие\", \"Дата\", \"Опции\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserProfileListRecipes, {\n        toggleDeleteModal: toggleDeleteModal,\n        recipes: recipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isOpenDeleteModal === true && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      isModalOpen: isOpenDeleteModal,\n      closeModal: () => toggleDeleteModal(selectedTaskToDelete),\n      deleteTask: () => deleteTask(selectedTaskToDelete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfileRecipesListContainer, \"D4THaooO2VrIsgVZY6Jgy1Yp5Vc=\");\n\n_c = UserProfileRecipesListContainer;\nexport default UserProfileRecipesListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileRecipesListContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/recipes/userProfileList/UserProfileRecipesListContainer.js"],"names":["axios","React","useEffect","useState","UserProfileListRecipes","DeleteModal","UserLayout","ListRow","UserProfileRecipesListContainer","props","recipes","setRecipes","isOpenDeleteModal","setIsOpenDeleteModal","selectedTaskToDelete","setSelectedTaskToDelete","isLoading","setLoading","fetchRecipes","get","then","res","data","catch","e","console","error","deleteTask","id","delete","window","location","reload","toggleDeleteModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,OAAO,mCAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;;;AAEA,MAAMC,+BAA+B,GAAIC,KAAD,IAAW;AAAA;;AACjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACW,oBAAD,EAAuBC,uBAAvB,IAAkDZ,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACa,SAAD,EAAYC,UAAZ,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAjB,IAAAA,KAAK,CACFmB,GADH,CACQ,+BADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,UAAU,CAACU,GAAG,CAACC,IAAL,CAAV;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGM,KANH,CAMUC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CANhB;AAOD,GATD;;AAUA,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AACzB5B,IAAAA,KAAK,CAAC6B,MAAN,CAAc,iCAAgCD,EAAG,EAAjD,EAAoDR,IAApD,CAA0DC,GAAD,IAAS;AAChEV,MAAAA,UAAU,CAACU,GAAG,CAACC,IAAL,CAAV;AACD,KAFD;AAGAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GALD;;AAOA,QAAMC,iBAAiB,GAAIL,EAAD,IAAQ;AAChCf,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACAG,IAAAA,uBAAuB,CAACa,EAAD,CAAvB;AACD,GAHD;;AAIA,MAAIZ,SAAJ,EAAe,OAAO,IAAP;AACf,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,IAAI,EAAEN,OADR;AAEE,QAAA,YAAY,EAAE,eAFhB;AAGE,QAAA,UAAU,EAAE,IAHd;AAIE,QAAA,iBAAiB,EAAEuB,iBAJrB;AAKE,QAAA,UAAU,EAAE,CAAC,IAAD,EAAO,UAAP,EAAmB,MAAnB,EAA2B,OAA3B;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,sBAAD;AACE,QAAA,iBAAiB,EAAEA,iBADrB;AAEE,QAAA,OAAO,EAAEvB;AAFX;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAcGE,iBAAiB,KAAK,IAAtB,iBACC,QAAC,WAAD;AACE,MAAA,WAAW,EAAEA,iBADf;AAEE,MAAA,UAAU,EAAE,MAAMqB,iBAAiB,CAACnB,oBAAD,CAFrC;AAGE,MAAA,UAAU,EAAE,MAAMa,UAAU,CAACb,oBAAD;AAH9B;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAxDD;;GAAMN,+B;;KAAAA,+B;AA0DN,eAAeA,+BAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport UserProfileListRecipes from \"./components/UserProfileListRecipes\";\nimport \"./UserProfileRecipesListStyle.css\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\n\nconst UserProfileRecipesListContainer = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedTaskToDelete, setSelectedTaskToDelete] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  const fetchRecipes = () => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:4000/recipes`)\n      .then((res) => {\n        setRecipes(res.data);\n        setLoading(false);\n      })\n      .catch((e) => console.error(e));\n  };\n  const deleteTask = (id) => {\n    axios.delete(`http://localhost:4000/recipes/${id}`).then((res) => {\n      setRecipes(res.data);\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = (id) => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedTaskToDelete(id);\n  };\n  if (isLoading) return null;\n  return (\n    <div className=\"page_wrapper\">\n      <UserLayout>\n        <ListRow\n          data={recipes}\n          listRowTitle={\"Моите рецепти\"}\n          isEditable={true}\n          toggleDeleteModal={toggleDeleteModal}\n          tableHeads={[\"Id\", \"Заглавие\", \"Дата\", \"Опции\"]}\n        />\n        <UserProfileListRecipes\n          toggleDeleteModal={toggleDeleteModal}\n          recipes={recipes}\n        />\n      </UserLayout>\n      {isOpenDeleteModal === true && (\n        <DeleteModal\n          isModalOpen={isOpenDeleteModal}\n          closeModal={() => toggleDeleteModal(selectedTaskToDelete)}\n          deleteTask={() => deleteTask(selectedTaskToDelete)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserProfileRecipesListContainer;\n"]},"metadata":{},"sourceType":"module"}