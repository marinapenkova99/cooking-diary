{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/createRecipe/CreateRecipeContainer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./CreateRecipeStyle.css\";\nimport TaskImageUploader from \"../../tasks/taskImageUploader/TaskImageUploader\";\nimport TextEditor from \"../../tasks/textEditor/TextEditor\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateRecipeContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchTasks();\n    };\n\n    this.fetchTasks = () => {\n      axios.get(`http://localhost:4000/category`).then(res => {\n        this.setState({\n          categories: res.data\n        });\n      });\n    };\n\n    this.validateForm = () => {\n      let isValid = true;\n\n      if (this.state.title.length < 1 || this.state.title.length > 200) {\n        isValid = false;\n        this.setState({\n          errorTitle: \"Please, enter valid title.\"\n        });\n      }\n\n      return isValid;\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        errorTitle: \"\"\n      });\n    };\n\n    this.handleSubmit = () => {\n      let isCreateTaskFormValid = this.validateForm();\n\n      if (!isCreateTaskFormValid) {\n        return;\n      }\n\n      this.resetForm();\n      let task = {\n        id: this.state.id,\n        title: this.state.title,\n        Date: new Date(this.state.Date).getTime() / 1000,\n        description: this.state.description !== \"\" ? this.state.description : undefined,\n        image: this.state.imagePreviewUrl,\n        categoryId: this.state.selectedCategory\n      };\n      axios.post(`http://localhost:4000/tasks`, {\n        task\n      }).then(res => {\n        window.location.reload();\n      }).catch(e => console.error(e));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    this.handleSelect = e => {\n      this.setState({\n        selectedCategory: e.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      Date: \"\",\n      id: Math.random() * 1000,\n      errorTitle: \"\",\n      description: \"\",\n      file: \"\",\n      imagePreviewUrl: \"\",\n      categories: [],\n      selectedCategory: \"\"\n    };\n  }\n\n  handleQuillChange(value) {\n    this.setState({\n      description: value\n    });\n  }\n\n  render() {\n    const {\n      title,\n      Date,\n      errorTitle,\n      description\n    } = this.state;\n    const {\n      isModalOpen,\n      closeModal\n    } = this.props;\n    if (this.state.isLoading === true) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 47\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(UserLayout, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"create_recipe_title\",\n          children: \" Create task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal_content_holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskImageUploader, {\n            handleImageChange: this.handleImageChange,\n            imagePreviewUrl: this.state.imagePreviewUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"title\",\n            type: \"text\",\n            placeholder: \"Enter title of the task\",\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), errorTitle && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errorTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"Date\",\n            placeholder: \"Enter date of the task\",\n            type: \"date\",\n            value: Date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n            placeholder: \"Започнете да пишете...\",\n            label: \"Enter description\",\n            value: description,\n            onTextEditorChange: text => this.handleQuillChange(text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleSelect,\n            value: this.state.selectedCategory,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \" Choose category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), this.state.categories.map((category, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.id,\n                children: category.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), console.log(this.state.selectedCategory), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateRecipeContainer;","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/createRecipe/CreateRecipeContainer.js"],"names":["React","axios","TaskImageUploader","TextEditor","UserLayout","CreateRecipeContainer","Component","constructor","props","componentDidMount","fetchTasks","get","then","res","setState","categories","data","validateForm","isValid","state","title","length","errorTitle","resetForm","handleSubmit","isCreateTaskFormValid","task","id","Date","getTime","description","undefined","image","imagePreviewUrl","categoryId","selectedCategory","post","window","location","reload","catch","e","console","error","handleChange","target","name","value","handleImageChange","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","handleSelect","Math","random","handleQuillChange","render","isModalOpen","closeModal","isLoading","text","map","category","index","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;;;AAEA,MAAMC,qBAAN,SAAoCL,KAAK,CAACM,SAA1C,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,iBAfmB,GAeC,MAAM;AACxB,WAAKC,UAAL;AACD,KAjBkB;;AAAA,SAkBnBA,UAlBmB,GAkBN,MAAM;AACjBT,MAAAA,KAAK,CAACU,GAAN,CAAW,gCAAX,EAA4CC,IAA5C,CAAkDC,GAAD,IAAS;AACxD,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEF,GAAG,CAACG;AAAlB,SAAd;AACD,OAFD;AAGD,KAtBkB;;AAAA,SAuBnBC,YAvBmB,GAuBJ,MAAM;AACnB,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+B,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,GAA7D,EAAkE;AAChEH,QAAAA,OAAO,GAAG,KAAV;AACA,aAAKJ,QAAL,CAAc;AAAEQ,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;;AAED,aAAOJ,OAAP;AACD,KA/BkB;;AAAA,SAgCnBK,SAhCmB,GAgCP,MAAM;AAChB,WAAKT,QAAL,CAAc;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KAlCkB;;AAAA,SAmCnBE,YAnCmB,GAmCJ,MAAM;AACnB,UAAIC,qBAAqB,GAAG,KAAKR,YAAL,EAA5B;;AAEA,UAAI,CAACQ,qBAAL,EAA4B;AAC1B;AACD;;AAED,WAAKF,SAAL;AACA,UAAIG,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAE,KAAKR,KAAL,CAAWQ,EADN;AAETP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFT;AAGTQ,QAAAA,IAAI,EAAE,IAAIA,IAAJ,CAAS,KAAKT,KAAL,CAAWS,IAApB,EAA0BC,OAA1B,KAAsC,IAHnC;AAITC,QAAAA,WAAW,EACT,KAAKX,KAAL,CAAWW,WAAX,KAA2B,EAA3B,GAAgC,KAAKX,KAAL,CAAWW,WAA3C,GAAyDC,SALlD;AAMTC,QAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,eANT;AAOTC,QAAAA,UAAU,EAAE,KAAKf,KAAL,CAAWgB;AAPd,OAAX;AASAlC,MAAAA,KAAK,CACFmC,IADH,CACS,6BADT,EACuC;AAAEV,QAAAA;AAAF,OADvC,EAEGd,IAFH,CAESC,GAAD,IAAS;AACbwB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAJH,EAKGC,KALH,CAKUC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CALhB;AAMD,KA1DkB;;AAAA,SA2DnBG,YA3DmB,GA2DHH,CAAD,IAAO;AACpB,WAAK3B,QAAL,CAAc;AAAE,SAAC2B,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiBL,CAAC,CAACI,MAAF,CAASE;AAA5B,OAAd;AACD,KA7DkB;;AAAA,SA8DnBC,iBA9DmB,GA8DEP,CAAD,IAAO;AACzBA,MAAAA,CAAC,CAACQ,cAAF;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIC,IAAI,GAAGX,CAAC,CAACI,MAAF,CAASQ,KAAT,CAAe,CAAf,CAAX;;AAEAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvB,aAAKxC,QAAL,CAAc;AACZsC,UAAAA,IAAI,EAAEA,IADM;AAEZnB,UAAAA,eAAe,EAAEiB,MAAM,CAACK;AAFZ,SAAd;AAID,OALD;;AAOAL,MAAAA,MAAM,CAACM,aAAP,CAAqBJ,IAArB;AACD,KA5EkB;;AAAA,SAgFnBK,YAhFmB,GAgFHhB,CAAD,IAAO;AACpB,WAAK3B,QAAL,CAAc;AAAEqB,QAAAA,gBAAgB,EAAEM,CAAC,CAACI,MAAF,CAASE;AAA7B,OAAd;AACD,KAlFkB;;AAGjB,SAAK5B,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXQ,MAAAA,IAAI,EAAE,EAFK;AAGXD,MAAAA,EAAE,EAAE+B,IAAI,CAACC,MAAL,KAAgB,IAHT;AAIXrC,MAAAA,UAAU,EAAE,EAJD;AAKXQ,MAAAA,WAAW,EAAE,EALF;AAMXsB,MAAAA,IAAI,EAAE,EANK;AAOXnB,MAAAA,eAAe,EAAE,EAPN;AAQXlB,MAAAA,UAAU,EAAE,EARD;AASXoB,MAAAA,gBAAgB,EAAE;AATP,KAAb;AAWD;;AA+DDyB,EAAAA,iBAAiB,CAACb,KAAD,EAAQ;AACvB,SAAKjC,QAAL,CAAc;AAAEgB,MAAAA,WAAW,EAAEiB;AAAf,KAAd;AACD;;AAIDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzC,MAAAA,KAAF;AAASQ,MAAAA,IAAT;AAAeN,MAAAA,UAAf;AAA2BQ,MAAAA;AAA3B,QAA2C,KAAKX,KAAtD;AACA,UAAM;AAAE2C,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA8B,KAAKvD,KAAzC;AACA,QAAI,KAAKW,KAAL,CAAW6C,SAAX,KAAyB,IAA7B,EAAmC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACnC,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,iBAAD;AACE,YAAA,iBAAiB,EAAE,KAAKhB,iBAD1B;AAEE,YAAA,eAAe,EAAE,KAAK7B,KAAL,CAAWc;AAF9B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AACE,YAAA,QAAQ,EAAE,KAAKW,YADjB;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,yBAJd;AAKE,YAAA,KAAK,EAAExB;AALT;AAAA;AAAA;AAAA;AAAA,kBANF,EAaGE,UAAU,iBAAI;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,sBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAbjB,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AACE,YAAA,QAAQ,EAAE,KAAKsB,YADjB;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,wBAHd;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,KAAK,EAAEhB;AALT;AAAA;AAAA;AAAA;AAAA,kBAfF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAuBE,QAAC,UAAD;AACE,YAAA,WAAW,EAAE,wBADf;AAEE,YAAA,KAAK,EAAE,mBAFT;AAGE,YAAA,KAAK,EAAEE,WAHT;AAIE,YAAA,kBAAkB,EAAGmC,IAAD,IAAU,KAAKL,iBAAL,CAAuBK,IAAvB;AAJhC;AAAA;AAAA;AAAA;AAAA,kBAvBF,EA4BK,GA5BL,eA6BE;AACE,YAAA,QAAQ,EAAE,KAAKR,YADjB;AAEE,YAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWgB,gBAFpB;AAAA,oCAIE;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKG,KAAKhB,KAAL,CAAWJ,UAAX,CAAsBmD,GAAtB,CAA0B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC9C,kCACE;AAAoB,gBAAA,KAAK,EAAED,QAAQ,CAACxC,EAApC;AAAA,0BACGwC,QAAQ,CAACrB;AADZ,iBAAasB,KAAb;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aANA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,EA0CG1B,OAAO,CAAC2B,GAAR,CAAY,KAAKlD,KAAL,CAAWgB,gBAAvB,CA1CH,eA2CE;AAAQ,YAAA,OAAO,EAAE,KAAKX,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqDD;;AA7IiD;;AAgJpD,eAAenB,qBAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./CreateRecipeStyle.css\";\nimport TaskImageUploader from \"../../tasks/taskImageUploader/TaskImageUploader\";\nimport TextEditor from \"../../tasks/textEditor/TextEditor\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\n\nclass CreateRecipeContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      Date: \"\",\n      id: Math.random() * 1000,\n      errorTitle: \"\",\n      description: \"\",\n      file: \"\",\n      imagePreviewUrl: \"\",\n      categories: [],\n      selectedCategory: \"\",\n    };\n  }\n  componentDidMount = () => {\n    this.fetchTasks();\n  };\n  fetchTasks = () => {\n    axios.get(`http://localhost:4000/category`).then((res) => {\n      this.setState({ categories: res.data });\n    });\n  };\n  validateForm = () => {\n    let isValid = true;\n    if (this.state.title.length < 1 || this.state.title.length > 200) {\n      isValid = false;\n      this.setState({ errorTitle: \"Please, enter valid title.\" });\n    }\n\n    return isValid;\n  };\n  resetForm = () => {\n    this.setState({ errorTitle: \"\" });\n  };\n  handleSubmit = () => {\n    let isCreateTaskFormValid = this.validateForm();\n\n    if (!isCreateTaskFormValid) {\n      return;\n    }\n\n    this.resetForm();\n    let task = {\n      id: this.state.id,\n      title: this.state.title,\n      Date: new Date(this.state.Date).getTime() / 1000,\n      description:\n        this.state.description !== \"\" ? this.state.description : undefined,\n      image: this.state.imagePreviewUrl,\n      categoryId: this.state.selectedCategory,\n    };\n    axios\n      .post(`http://localhost:4000/tasks`, { task })\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((e) => console.error(e));\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleImageChange = (e) => {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n  handleQuillChange(value) {\n    this.setState({ description: value });\n  }\n  handleSelect = (e) => {\n    this.setState({ selectedCategory: e.target.value });\n  };\n  render() {\n    const { title, Date, errorTitle, description } = this.state;\n    const { isModalOpen, closeModal } = this.props;\n    if (this.state.isLoading === true) return <p>Loading</p>;\n    return (\n      <div className=\"page_wrapper\">\n        <UserLayout>\n          <h2 className=\"create_recipe_title\"> Create task</h2>\n\n          <div className=\"modal_content_holder\">\n            <label>Title</label>\n            <TaskImageUploader\n              handleImageChange={this.handleImageChange}\n              imagePreviewUrl={this.state.imagePreviewUrl}\n            />\n            <input\n              onChange={this.handleChange}\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Enter title of the task\"\n              value={title}\n            />\n            {errorTitle && <p className=\"error\">{errorTitle}</p>}\n            <label>Date</label>\n            <input\n              onChange={this.handleChange}\n              name=\"Date\"\n              placeholder=\"Enter date of the task\"\n              type=\"date\"\n              value={Date}\n            />\n            <label>Description</label>\n            <TextEditor\n              placeholder={\"Започнете да пишете...\"}\n              label={\"Enter description\"}\n              value={description}\n              onTextEditorChange={(text) => this.handleQuillChange(text)}\n            />{\" \"}\n            <select\n              onChange={this.handleSelect}\n              value={this.state.selectedCategory}\n            >\n              <option value=\"\"> Choose category</option>\n              {this.state.categories.map((category, index) => {\n                return (\n                  <option key={index} value={category.id}>\n                    {category.name}\n                  </option>\n                );\n              })}\n            </select>\n            {console.log(this.state.selectedCategory)}\n            <button onClick={this.handleSubmit}>Submit</button>\n          </div>\n        </UserLayout>\n      </div>\n    );\n  }\n}\n\nexport default CreateRecipeContainer;\n"]},"metadata":{},"sourceType":"module"}