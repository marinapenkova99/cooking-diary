{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/newsletter/list/NewsletterEmailsListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewsletterEmailsList from \"./components/NewsletterEmailsList\";\nimport axios from \"axios\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"./../../../packages/modals/DeleteModal\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewsletterEmailsListContainer = props => {\n  _s();\n\n  const [emails, setEmails] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedEmailToDelete, setSelectedEmailToDelete] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  useEffect(() => {\n    getEmails();\n  }, []);\n\n  const getEmails = () => {\n    setIsLoading(true);\n    axios.get(`http://localhost:4000/newsletter/email`).then(res => {\n      setEmails(res.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  const deleteEmail = email => {\n    axios.delete(`http://localhost:4000/newsletter/${email}`).then(res => {\n      setSuccess(\"Вие успешно изтрихте абонат\");\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = email => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedEmailToDelete(email);\n  };\n\n  const tableCells = (cell, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: cell.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(UserLayout, {\n      children: [/*#__PURE__*/_jsxDEV(ListRow, {\n        dataList: emails,\n        listRowTitle: \"Абонаменти\",\n        toggleDeleteModal: toggleDeleteModal,\n        isEditable: false,\n        tableCells: tableCells,\n        tableHeads: [\"#\", \"Имейл\", \"Опции\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewsletterEmailsList, {\n        toggleDeleteModal: toggleDeleteModal,\n        emails: emails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"right\"\n        },\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isOpenDeleteModal === true && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      isModalOpen: isOpenDeleteModal,\n      closeModal: () => toggleDeleteModal(selectedEmailToDelete),\n      deleteData: () => deleteEmail(selectedEmailToDelete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsletterEmailsListContainer, \"PUYuZCygbVViU18ZtA03hTJM/Pw=\");\n\n_c = NewsletterEmailsListContainer;\nexport default NewsletterEmailsListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterEmailsListContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/newsletter/list/NewsletterEmailsListContainer.js"],"names":["React","useEffect","useState","NewsletterEmailsList","axios","UserLayout","DeleteModal","ListRow","moment","NewsletterEmailsListContainer","props","emails","setEmails","isLoading","setIsLoading","isOpenDeleteModal","setIsOpenDeleteModal","selectedEmailToDelete","setSelectedEmailToDelete","success","setSuccess","getEmails","get","then","res","data","catch","err","console","log","response","deleteEmail","email","delete","window","location","reload","toggleDeleteModal","tableCells","cell","index","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewsletterEmailsList from \"./components/NewsletterEmailsList\";\nimport axios from \"axios\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"./../../../packages/modals/DeleteModal\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\nimport moment from \"moment\";\n\nconst NewsletterEmailsListContainer = (props) => {\n  const [emails, setEmails] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedEmailToDelete, setSelectedEmailToDelete] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  useEffect(() => {\n    getEmails();\n  }, []);\n\n  const getEmails = () => {\n    setIsLoading(true);\n    axios\n      .get(`http://localhost:4000/newsletter/email`)\n      .then((res) => {\n        setEmails(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  const deleteEmail = (email) => {\n    axios.delete(`http://localhost:4000/newsletter/${email}`).then((res) => {\n      setSuccess(\"Вие успешно изтрихте абонат\");\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = (email) => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedEmailToDelete(email);\n  };\n  const tableCells = (cell, index) => {\n    return (\n      <>\n        <td> {index + 1}</td>\n        <td>{cell.email}</td>\n      </>\n    );\n  };\n  if (isLoading) return null;\n  return (\n    <div className=\"page_wrapper\">\n      <UserLayout>\n        <ListRow\n          dataList={emails}\n          listRowTitle={\"Абонаменти\"}\n          toggleDeleteModal={toggleDeleteModal}\n          isEditable={false}\n          tableCells={tableCells}\n          tableHeads={[\"#\", \"Имейл\", \"Опции\"]}\n        />\n        <NewsletterEmailsList\n          toggleDeleteModal={toggleDeleteModal}\n          emails={emails}\n        />\n        {success && (\n          <p style={{ textAlign: \"right\" }} className=\"success\">\n            {success}\n          </p>\n        )}\n      </UserLayout>\n      {isOpenDeleteModal === true && (\n        <DeleteModal\n          isModalOpen={isOpenDeleteModal}\n          closeModal={() => toggleDeleteModal(selectedEmailToDelete)}\n          deleteData={() => deleteEmail(selectedEmailToDelete)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewsletterEmailsListContainer;\n"]},"metadata":{},"sourceType":"module"}