{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/user/login/LoginContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport Context from \"../../../utils/UserContext\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = props => {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({\n    password: \"\",\n    email: \"\"\n  });\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [error, setError] = useState(\"\");\n  const [{\n    user\n  }, dispatch] = useContext(Context);\n  const auth = getAuth();\n\n  const handleSubmit = () => {\n    sigIn();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${currentUser.accessToken}`\n      }\n    };\n    let user = {\n      password: userInfo.password,\n      email: userInfo.email\n    };\n    axios.post(`http://localhost:4000/user/login`, {\n      user\n    }, config).then(res => {\n      window.location.assign(\"/\");\n      setUser(res.data[0]);\n    }).catch(err => {\n      setError(err.response.data.message);\n      console.log(err.response);\n    });\n  };\n\n  const handleChange = e => {\n    setUserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const sigIn = () => {\n    signInWithEmailAndPassword(auth, userInfo.email, userInfo.password).then(userCredential => {\n      setCurrentUser(userCredential.user);\n      {\n        console.log(userCredential);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const setUser = user => {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    error: error,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    password: userInfo.password,\n    email: userInfo.email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginContainer, \"RXX2tpkLyLI71xKB2sMJcqnTSa8=\");\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/user/login/LoginContainer.js"],"names":["React","useContext","useEffect","useState","axios","LoginForm","SET_USER","Context","getAuth","signInWithEmailAndPassword","LoginContainer","props","userInfo","setUserInfo","password","email","currentUser","setCurrentUser","undefined","error","setError","user","dispatch","auth","handleSubmit","sigIn","config","headers","Authorization","accessToken","post","then","res","window","location","assign","setUser","data","catch","err","response","message","console","log","handleChange","e","target","name","value","userCredential","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport Context from \"../../../utils/UserContext\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nconst LoginContainer = (props) => {\n  const [userInfo, setUserInfo] = useState({\n    password: \"\",\n    email: \"\",\n  });\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [error, setError] = useState(\"\");\n\n  const [{ user }, dispatch] = useContext(Context);\n  const auth = getAuth();\n\n  const handleSubmit = () => {\n    sigIn();\n    const config = {\n      headers: { Authorization: `Bearer ${currentUser.accessToken}` },\n    };\n\n    let user = {\n      password: userInfo.password,\n      email: userInfo.email,\n    };\n    axios\n      .post(`http://localhost:4000/user/login`, { user }, config)\n      .then((res) => {\n        window.location.assign(\"/\");\n        setUser(res.data[0]);\n      })\n      .catch((err) => {\n        setError(err.response.data.message);\n        console.log(err.response);\n      });\n  };\n  const handleChange = (e) => {\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value });\n  };\n  const sigIn = () => {\n    signInWithEmailAndPassword(auth, userInfo.email, userInfo.password)\n      .then((userCredential) => {\n        setCurrentUser(userCredential.user);\n        {\n          console.log(userCredential);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const setUser = (user) => {\n    dispatch({\n      type: SET_USER,\n      payload: { user },\n    });\n  };\n  return (\n    <LoginForm\n      error={error}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      password={userInfo.password}\n      email={userInfo.email}\n    />\n  );\n};\n\nexport default LoginContainer;\n"]},"metadata":{},"sourceType":"module"}