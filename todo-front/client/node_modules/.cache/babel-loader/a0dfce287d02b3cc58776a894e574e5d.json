{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/preview/RecipePreviewContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport RecipePreview from \"./components/RecipePreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipePreviewContainer = props => {\n  _s();\n\n  const [recipe, setRecipe] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [commentDescr, setComment] = useState(\"\");\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n  const getRecipe = () => {\n    setLoading(true);\n    axios.get(`http://localhost:4000/tasks/${props.match.params.title}`).then(res => {\n      setRecipe(res.data[0]);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  const handleInput = e => {\n    setComment(e.target.value);\n  };\n\n  const postComment = () => {\n    let comment = {\n      username: user.username,\n      avatar: user.image,\n      recipeId: recipe.id,\n      comment: commentDescr\n    };\n    axios.post(`http://localhost:4000/comments/`, {\n      comment\n    }).then(res => {}).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(RecipePreview, {\n    handleInput: handleInput,\n    postComment: postComment,\n    commentDescr: commentDescr,\n    recipe: recipe\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipePreviewContainer, \"0lDEiQaqU8nyTMs1jgjQFGrkChE=\");\n\n_c = RecipePreviewContainer;\nexport default _c2 = withRouter(RecipePreviewContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecipePreviewContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/preview/RecipePreviewContainer.js"],"names":["React","useEffect","useState","axios","withRouter","RecipePreview","RecipePreviewContainer","props","recipe","setRecipe","isLoading","setLoading","commentDescr","setComment","getRecipe","get","match","params","title","then","res","data","catch","err","console","log","response","handleInput","e","target","value","postComment","comment","username","user","avatar","image","recipeId","id","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,YAAD,EAAeC,UAAf,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,IAAAA,KAAK,CACFY,GADH,CACQ,+BAA8BR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,KAAM,EAD/D,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbX,MAAAA,SAAS,CAACW,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAD,CAAT;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGW,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD,KARH;AASD,GAXD;;AAYA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBf,IAAAA,UAAU,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,OAAO,GAAG;AACZC,MAAAA,QAAQ,EAAEC,IAAI,CAACD,QADH;AAEZE,MAAAA,MAAM,EAAED,IAAI,CAACE,KAFD;AAGZC,MAAAA,QAAQ,EAAE7B,MAAM,CAAC8B,EAHL;AAIZN,MAAAA,OAAO,EAAEpB;AAJG,KAAd;AAMAT,IAAAA,KAAK,CACFoC,IADH,CACS,iCADT,EAC2C;AAAEP,MAAAA;AAAF,KAD3C,EAEGb,IAFH,CAESC,GAAD,IAAS,CAAE,CAFnB,EAGGE,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD,KALH;AAMD,GAbD;;AAcA,MAAIhB,SAAJ,EAAe,OAAO,IAAP;AAEf,sBACE,QAAC,aAAD;AACE,IAAA,WAAW,EAAEiB,WADf;AAEE,IAAA,WAAW,EAAEI,WAFf;AAGE,IAAA,YAAY,EAAEnB,YAHhB;AAIE,IAAA,MAAM,EAAEJ;AAJV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/CD;;GAAMF,sB;;KAAAA,sB;AAiDN,qBAAeF,UAAU,CAACE,sBAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport RecipePreview from \"./components/RecipePreview\";\n\nconst RecipePreviewContainer = (props) => {\n  const [recipe, setRecipe] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [commentDescr, setComment] = useState(\"\");\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n  const getRecipe = () => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:4000/tasks/${props.match.params.title}`)\n      .then((res) => {\n        setRecipe(res.data[0]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  const handleInput = (e) => {\n    setComment(e.target.value);\n  };\n  const postComment = () => {\n    let comment = {\n      username: user.username,\n      avatar: user.image,\n      recipeId: recipe.id,\n      comment: commentDescr,\n    };\n    axios\n      .post(`http://localhost:4000/comments/`, { comment })\n      .then((res) => {})\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  if (isLoading) return null;\n\n  return (\n    <RecipePreview\n      handleInput={handleInput}\n      postComment={postComment}\n      commentDescr={commentDescr}\n      recipe={recipe}\n    />\n  );\n};\n\nexport default withRouter(RecipePreviewContainer);\n"]},"metadata":{},"sourceType":"module"}