{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/user/login/LoginContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport Context from \"../../../utils/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [{\n    user\n  }, dispatch] = useContext(Context);\n\n  const handleSubmit = () => {\n    let user = {\n      username: username,\n      password: password\n    };\n    axios.post(`http://localhost:4000/user/login`, {\n      user\n    }).then(res => {\n      window.location.assign(\"/tasks\");\n      setUser(res.data[0]);\n    }).catch(err => {\n      setError(err.response.data.message);\n      console.log(err.response);\n    });\n  };\n\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const setUser = user => {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    error: error,\n    handleUsernameChange: handleUsernameChange,\n    handlePasswordChange: handlePasswordChange,\n    handleSubmit: handleSubmit,\n    password: password,\n    username: username\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginContainer, \"FoSkUEzPLVw7YTMtVf4ZuctUMf0=\");\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/user/login/LoginContainer.js"],"names":["React","useContext","useState","axios","LoginForm","SET_USER","Context","LoginContainer","props","username","setUsername","password","setPassword","error","setError","user","dispatch","handleSubmit","post","then","res","window","location","assign","setUser","data","catch","err","response","message","console","log","handleUsernameChange","e","target","value","handlePasswordChange","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,QAAT,QAAyB,sCAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC;AAAEa,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBf,UAAU,CAACK,OAAD,CAAvC;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAIF,IAAI,GAAG;AACTN,MAAAA,QAAQ,EAAEA,QADD;AAETE,MAAAA,QAAQ,EAAEA;AAFD,KAAX;AAIAR,IAAAA,KAAK,CACFe,IADH,CACS,kCADT,EAC4C;AAAEH,MAAAA;AAAF,KAD5C,EAEGI,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;AACAC,MAAAA,OAAO,CAACJ,GAAG,CAACK,IAAJ,CAAS,CAAT,CAAD,CAAP;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAACa,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAnB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,QAAhB;AACD,KATH;AAUD,GAfD;;AAgBA,QAAMI,oBAAoB,GAAIC,CAAD,IAAO;AAClCvB,IAAAA,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAIH,CAAD,IAAO;AAClCrB,IAAAA,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMX,OAAO,GAAIT,IAAD,IAAU;AACxBC,IAAAA,QAAQ,CAAC;AACPqB,MAAAA,IAAI,EAAEhC,QADC;AAEPiC,MAAAA,OAAO,EAAE;AAAEvB,QAAAA;AAAF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,oBAAoB,EAAEmB,oBAFxB;AAGE,IAAA,oBAAoB,EAAEI,oBAHxB;AAIE,IAAA,YAAY,EAAEnB,YAJhB;AAKE,IAAA,QAAQ,EAAEN,QALZ;AAME,IAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9CD;;GAAMF,c;;KAAAA,c;AAgDN,eAAeA,cAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport Context from \"../../../utils/UserContext\";\n\nconst LoginContainer = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [{ user }, dispatch] = useContext(Context);\n\n  const handleSubmit = () => {\n    let user = {\n      username: username,\n      password: password,\n    };\n    axios\n      .post(`http://localhost:4000/user/login`, { user })\n      .then((res) => {\n        window.location.assign(\"/tasks\");\n        setUser(res.data[0]);\n      })\n      .catch((err) => {\n        setError(err.response.data.message);\n        console.log(err.response);\n      });\n  };\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const setUser = (user) => {\n    dispatch({\n      type: SET_USER,\n      payload: { user },\n    });\n  };\n\n  return (\n    <LoginForm\n      error={error}\n      handleUsernameChange={handleUsernameChange}\n      handlePasswordChange={handlePasswordChange}\n      handleSubmit={handleSubmit}\n      password={password}\n      username={username}\n    />\n  );\n};\n\nexport default LoginContainer;\n"]},"metadata":{},"sourceType":"module"}