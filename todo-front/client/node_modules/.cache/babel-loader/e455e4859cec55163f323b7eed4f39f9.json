{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/user/register/RegisterContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\nimport emailValidator from \"../../../utils/EmailValidator\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterContainer = props => {\n  _s();\n\n  const [id, setId] = useState(uuidv4());\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\"\n  });\n  const [userInfoError, setUserInfoError] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\"\n  });\n  const [{\n    user\n  }, dispatch] = useContext(UserContext);\n  const auth = getAuth();\n\n  const validateForm = () => {\n    let isValid = true;\n    let usernameError = \"\";\n    let passwordError = \"\";\n    let emailError = \"\";\n\n    if (userInfo.username.length <= 3 || userInfo.username.length >= 20) {\n      isValid = false;\n      usernameError = \"Моля, въведете валидно потребителско име.\";\n    }\n\n    if (!userInfo.email.length || !emailValidator(userInfo.email)) {\n      isValid = false;\n      emailError = \"Моля, въведете валиден имейл.\";\n    }\n\n    if (userInfo.password.length <= 1 || userInfo.secondPassword !== userInfo.password) {\n      isValid = false;\n      passwordError = \"Моля, въведете парола.\";\n    }\n\n    setUserInfoError({ ...userInfoError,\n      username: usernameError,\n      password: passwordError,\n      secondPassword: passwordError,\n      email: emailError\n    });\n    return isValid;\n  };\n\n  const resetForm = () => {\n    setUserInfoError({\n      username: \"\",\n      password: \"\",\n      secondPassword: \"\",\n      email: \"\"\n    });\n  };\n\n  const handleSubmit = () => {\n    createUserWithEmailAndPassword(auth, userInfo.email, userInfo.password).then(userCredential => {\n      setCurrentUser(userCredential.user);\n      {\n        console.log(userCredential.user, 'first then');\n      }\n      let isRegisterFormValid = validateForm();\n\n      if (!isRegisterFormValid) {\n        return;\n      }\n\n      resetForm();\n      let user = {\n        username: userInfo.username,\n        password: userInfo.password,\n        email: userInfo.email,\n        id: id,\n        role: \"USER\"\n      };\n      axios.post(`http://localhost:4000/user/register`, {\n        user\n      }).then(res => {\n        Login();\n        {\n          console.log('second then');\n        }\n      }).catch(err => {\n        console.log(err.response);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const Login = () => {\n    let user = {\n      password: userInfo.password,\n      email: userInfo.email\n    };\n    signInWithEmailAndPassword(auth, userInfo.email, userInfo.password).then(userCredential => {\n      setCurrentUser(userCredential.user);\n      userCredential.user.getIdToken(\n      /* forceRefresh */\n      true).then(function (idToken) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${idToken}`\n          }\n        };\n        axios.post(`http://localhost:4000/user/login`, {\n          user\n        }, config).then(res => {\n          // window.location.assign(\"/\");\n          setUser(res.data[0]);\n        }).catch(err => {\n          console.log(err.response);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleChange = e => {\n    setUserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const setUser = user => {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterForm, {\n    username: userInfo.username,\n    email: userInfo.email,\n    emailError: userInfoError.email,\n    password: userInfo.password,\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    password2: userInfo.secondPassword,\n    usernameError: userInfoError.username,\n    passwordError: userInfoError.password\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterContainer, \"85E3yQS5jkejkNk1b4w1Oj01kh4=\");\n\n_c = RegisterContainer;\nexport default RegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/user/register/RegisterContainer.js"],"names":["React","useContext","useState","axios","RegisterForm","SET_USER","v4","uuidv4","UserContext","emailValidator","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","RegisterContainer","props","id","setId","currentUser","setCurrentUser","undefined","userInfo","setUserInfo","username","email","password","secondPassword","userInfoError","setUserInfoError","user","dispatch","auth","validateForm","isValid","usernameError","passwordError","emailError","length","resetForm","handleSubmit","then","userCredential","console","log","isRegisterFormValid","role","post","res","Login","catch","err","response","getIdToken","idToken","config","headers","Authorization","setUser","data","error","handleChange","e","target","name","value","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\nimport emailValidator from \"../../../utils/EmailValidator\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst RegisterContainer = (props) => {\n  const [id, setId] = useState(uuidv4());\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\",\n  });\n  const [userInfoError, setUserInfoError] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\",\n  });\n  const [{ user }, dispatch] = useContext(UserContext);\n  const auth = getAuth();\n  const validateForm = () => {\n    let isValid = true;\n    let usernameError = \"\";\n    let passwordError = \"\";\n    let emailError = \"\";\n    if (userInfo.username.length <= 3 || userInfo.username.length >= 20) {\n      isValid = false;\n      usernameError = \"Моля, въведете валидно потребителско име.\";\n    }\n    if (!userInfo.email.length || !emailValidator(userInfo.email)) {\n      isValid = false;\n      emailError = \"Моля, въведете валиден имейл.\";\n    }\n    if (\n      userInfo.password.length <= 1 ||\n      userInfo.secondPassword !== userInfo.password\n    ) {\n      isValid = false;\n      passwordError = \"Моля, въведете парола.\";\n    }\n    setUserInfoError({\n      ...userInfoError,\n      username: usernameError,\n      password: passwordError,\n      secondPassword: passwordError,\n      email: emailError,\n    });\n    return isValid;\n  };\n  const resetForm = () => {\n    setUserInfoError({\n      username: \"\",\n      password: \"\",\n      secondPassword: \"\",\n      email: \"\",\n    });\n  };\n  const handleSubmit = () => {\n    createUserWithEmailAndPassword(auth, userInfo.email, userInfo.password)\n      .then((userCredential) => {\n        setCurrentUser(userCredential.user);\n        {console.log(userCredential.user, 'first then')}\n        let isRegisterFormValid = validateForm();\n\n        if (!isRegisterFormValid) {\n          return;\n        }\n\n        resetForm();\n        let user = {\n          username: userInfo.username,\n          password: userInfo.password,\n          email: userInfo.email,\n          id: id,\n          role: \"USER\",\n        };\n        axios\n          .post(`http://localhost:4000/user/register`, { user })\n          .then((res) => {\n            Login();\n            {console.log('second then')}\n          })\n          .catch((err) => {\n            console.log(err.response);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const Login = () => {\n    let user = {\n      password: userInfo.password,\n      email: userInfo.email,\n    };\n    signInWithEmailAndPassword(auth, userInfo.email, userInfo.password)\n      .then((userCredential) => {\n        setCurrentUser(userCredential.user);\n        userCredential.user\n          .getIdToken(/* forceRefresh */ true)\n          .then(function (idToken) {\n            const config = {\n              headers: {\n                Authorization: `Bearer ${idToken}`,\n              },\n            };\n            axios\n              .post(`http://localhost:4000/user/login`, { user }, config)\n              .then((res) => {\n                // window.location.assign(\"/\");\n                setUser(res.data[0]);\n              })\n              .catch((err) => {\n                console.log(err.response);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleChange = (e) => {\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value });\n  };\n  const setUser = (user) => {\n    dispatch({\n      type: SET_USER,\n      payload: { user },\n    });\n  };\n\n  return (\n    <RegisterForm\n      username={userInfo.username}\n      email={userInfo.email}\n      emailError={userInfoError.email}\n      password={userInfo.password}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      password2={userInfo.secondPassword}\n      usernameError={userInfoError.username}\n      passwordError={userInfoError.password}\n    />\n  );\n};\n\nexport default RegisterContainer;\n"]},"metadata":{},"sourceType":"module"}