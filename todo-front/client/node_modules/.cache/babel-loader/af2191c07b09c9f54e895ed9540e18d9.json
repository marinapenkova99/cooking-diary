{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/user/register/RegisterContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\nimport emailValidator from \"../../../utils/EmailValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterContainer = props => {\n  _s();\n\n  const [id, setId] = useState(uuidv4());\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\"\n  });\n  const [userInfoError, setUserInfoError] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\"\n  });\n  const [{\n    user\n  }, dispatch] = useContext(UserContext);\n\n  const validateForm = () => {\n    let isValid = true;\n    let usernameError = \"\";\n    let passwordError = \"\";\n    let emailError = \"\";\n\n    if (userInfo.username.length <= 3 || userInfo.username.length >= 20) {\n      isValid = false;\n      usernameError = \"Моля, въведете валидно потребителско име.\";\n    }\n\n    if (!userInfo.email.length <= 3 || emailValidator(userInfo.email)) {\n      isValid = false;\n      emailError = \"Моля, въведете валиден имейл.\";\n    }\n\n    if (userInfo.password.length <= 1 || userInfo.secondPassword !== userInfo.password) {\n      isValid = false;\n      passwordError = \"Моля, въведете парола.\";\n    }\n\n    setUserInfoError({ ...userInfoError,\n      username: usernameError,\n      password: passwordError,\n      secondPassword: passwordError,\n      email: emailError\n    });\n    return isValid;\n  };\n\n  const resetForm = () => {\n    setUserInfoError({\n      username: \"\",\n      password: \"\",\n      secondPassword: \"\",\n      email: \"\"\n    });\n  };\n\n  const handleSubmit = () => {\n    let isRegisterFormValid = validateForm();\n\n    if (!isRegisterFormValid) {\n      return;\n    }\n\n    resetForm();\n    let user = {\n      username: userInfo.username,\n      password: userInfo.password,\n      email: userInfo.email,\n      id: id,\n      role: \"USER\"\n    };\n    axios.post(`http://localhost:4000/user/register`, {\n      user\n    }).then(res => {\n      Login();\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  const Login = () => {\n    let user = {\n      username: userInfo.username,\n      password: userInfo.password,\n      email: userInfo.email\n    };\n    axios.post(`http://localhost:4000/user/login`, {\n      user\n    }).then(res => {\n      setUser(res.data[0]);\n      window.location.assign(\"/\");\n    }).catch(err => {\n      console.log(err.response);\n    });\n  };\n\n  const handleChange = e => {\n    setUserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const setUser = user => {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterForm, {\n    username: userInfo.username,\n    email: userInfo.email,\n    emailError: userInfoError.email,\n    password: userInfo.password,\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    password2: userInfo.secondPassword,\n    usernameError: userInfoError.username,\n    passwordError: userInfoError.password\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterContainer, \"qpWHKuvBVbzZx5VjVYCL174TXtY=\");\n\n_c = RegisterContainer;\nexport default RegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/user/register/RegisterContainer.js"],"names":["React","useContext","useState","axios","RegisterForm","SET_USER","v4","uuidv4","UserContext","emailValidator","RegisterContainer","props","id","setId","userInfo","setUserInfo","username","email","password","secondPassword","userInfoError","setUserInfoError","user","dispatch","validateForm","isValid","usernameError","passwordError","emailError","length","resetForm","handleSubmit","isRegisterFormValid","role","post","then","res","Login","catch","err","console","log","response","setUser","data","window","location","assign","handleChange","e","target","name","value","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\nimport emailValidator from \"../../../utils/EmailValidator\";\n\nconst RegisterContainer = (props) => {\n  const [id, setId] = useState(uuidv4());\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\",\n  });\n  const [userInfoError, setUserInfoError] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    secondPassword: \"\",\n  });\n  const [{ user }, dispatch] = useContext(UserContext);\n\n  const validateForm = () => {\n    let isValid = true;\n    let usernameError = \"\";\n    let passwordError = \"\";\n    let emailError = \"\";\n    if (userInfo.username.length <= 3 || userInfo.username.length >= 20) {\n      isValid = false;\n      usernameError = \"Моля, въведете валидно потребителско име.\";\n    }\n    if (!userInfo.email.length <= 3 || emailValidator(userInfo.email)) {\n      isValid = false;\n      emailError = \"Моля, въведете валиден имейл.\";\n    }\n    if (\n      userInfo.password.length <= 1 ||\n      userInfo.secondPassword !== userInfo.password\n    ) {\n      isValid = false;\n      passwordError = \"Моля, въведете парола.\";\n    }\n    setUserInfoError({\n      ...userInfoError,\n      username: usernameError,\n      password: passwordError,\n      secondPassword: passwordError,\n      email: emailError,\n    });\n    return isValid;\n  };\n  const resetForm = () => {\n    setUserInfoError({\n      username: \"\",\n      password: \"\",\n      secondPassword: \"\",\n      email: \"\",\n    });\n  };\n  const handleSubmit = () => {\n    let isRegisterFormValid = validateForm();\n\n    if (!isRegisterFormValid) {\n      return;\n    }\n\n    resetForm();\n    let user = {\n      username: userInfo.username,\n      password: userInfo.password,\n      email: userInfo.email,\n      id: id,\n      role: \"USER\",\n    };\n    axios\n      .post(`http://localhost:4000/user/register`, { user })\n      .then((res) => {\n        Login();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  const Login = () => {\n    let user = {\n      username: userInfo.username,\n      password: userInfo.password,\n      email: userInfo.email,\n    };\n    axios\n      .post(`http://localhost:4000/user/login`, { user })\n      .then((res) => {\n        setUser(res.data[0]);\n        window.location.assign(\"/\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  const handleChange = (e) => {\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value });\n  };\n  const setUser = (user) => {\n    dispatch({\n      type: SET_USER,\n      payload: { user },\n    });\n  };\n\n  return (\n    <RegisterForm\n      username={userInfo.username}\n      email={userInfo.email}\n      emailError={userInfoError.email}\n      password={userInfo.password}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      password2={userInfo.secondPassword}\n      usernameError={userInfoError.username}\n      passwordError={userInfoError.password}\n    />\n  );\n};\n\nexport default RegisterContainer;\n"]},"metadata":{},"sourceType":"module"}