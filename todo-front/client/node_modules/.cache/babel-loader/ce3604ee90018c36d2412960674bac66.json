{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/recipes/editRecipe/TaskEditContainer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport \"../../tasks/taskEdit/EditTaskstyle.css\";\nimport moment from \"moment\";\nimport RecipeImageUploader from \"../recipeImageUploader/RecipeImageUploader\";\nimport TextEditor from \"../../tasks/textEditor/TextEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskEditContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchTask = () => {\n      this.setState({\n        isLoading: true\n      });\n      axios.get(`http://localhost:4000/tasks/${this.props.id}`).then(res => {\n        this.setState({\n          title: res.data[0].title,\n          date: moment.unix(res.data[0].Date).format(\"DD.MM.YYYY \"),\n          description: res.data[0].description,\n          image: res.data[0].image,\n          categoryId: res.data[0].categoryId\n        });\n        this.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.fetchCategories = () => {\n      this.setState({\n        categoriesLoading: true\n      });\n      axios.get(`http://localhost:4000/category`).then(res => {\n        this.setState({\n          categories: res.data\n        });\n        this.setState({\n          categoriesLoading: false\n        });\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.getCategoryById = () => {\n      this.setState({\n        categoryLoading: true\n      });\n      axios.get(`http://localhost:4000/category/${this.state.categoryId}`).then(res => {\n        this.setState({\n          categoryName: res.data[0].name\n        });\n        this.setState({\n          categoryLoading: false\n        });\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.handleSubmit = () => {\n      let task = {\n        title: this.state.title,\n        Date: moment(this.state.date).unix(),\n        description: this.state.description,\n        image: this.state.image,\n        categoryId: this.state.categoryId\n      };\n      axios.put(`http://localhost:4000/tasks/${this.props.id}`, {\n        task\n      }).then(res => {\n        window.location.reload();\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          image: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    this.handleSelect = e => {\n      this.setState({\n        categoryId: e.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      date: \"\",\n      isLoading: true,\n      description: \"\",\n      image: \"\",\n      file: \"\",\n      categoryId: \"\",\n      categoryName: \"\",\n      categoryLoading: true,\n      categoriesLoading: true,\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTask();\n    this.getCategoryById();\n    this.fetchCategories();\n  }\n\n  handleQuillChange(value) {\n    this.setState({\n      description: value\n    });\n  }\n\n  render() {\n    const {\n      title,\n      date,\n      description\n    } = this.state;\n    if (this.state.isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.props.isModalOpen,\n      onHide: this.props.closeModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: this.props.closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal_content_holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(RecipeImageUploader, {\n          handleImageChange: this.handleImageChange,\n          imagePreviewUrl: this.state.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          name: \"title\",\n          type: \"text\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          name: \"date\",\n          type: \"text\",\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n          placeholder: \"Започнете да пишете...\",\n          label: \"Enter description\",\n          value: description,\n          onTextEditorChange: text => this.handleQuillChange(text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleSelect,\n          value: this.state.categoryId,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Choose category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), this.state.categories.map((category, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TaskEditContainer;","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/recipes/editRecipe/TaskEditContainer.js"],"names":["React","axios","Modal","ModalHeader","moment","RecipeImageUploader","TextEditor","TaskEditContainer","Component","constructor","props","fetchTask","setState","isLoading","get","id","then","res","title","data","date","unix","Date","format","description","image","categoryId","catch","err","console","log","response","fetchCategories","categoriesLoading","categories","getCategoryById","categoryLoading","state","categoryName","name","handleSubmit","task","put","window","location","reload","handleChange","e","target","value","handleImageChange","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","handleSelect","componentDidMount","handleQuillChange","render","isModalOpen","closeModal","text","map","category","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport \"../../tasks/taskEdit/EditTaskstyle.css\";\nimport moment from \"moment\";\nimport RecipeImageUploader from \"../recipeImageUploader/RecipeImageUploader\";\nimport TextEditor from \"../../tasks/textEditor/TextEditor\";\n\nclass TaskEditContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      date: \"\",\n      isLoading: true,\n      description: \"\",\n      image: \"\",\n      file: \"\",\n      categoryId: \"\",\n      categoryName: \"\",\n      categoryLoading: true,\n      categoriesLoading: true,\n      categories: [],\n    };\n  }\n  componentDidMount() {\n    this.fetchTask();\n    this.getCategoryById();\n    this.fetchCategories();\n  }\n\n  fetchTask = () => {\n    this.setState({ isLoading: true });\n    axios\n      .get(`http://localhost:4000/tasks/${this.props.id}`)\n      .then((res) => {\n        this.setState({\n          title: res.data[0].title,\n          date: moment.unix(res.data[0].Date).format(\"DD.MM.YYYY \"),\n          description: res.data[0].description,\n          image: res.data[0].image,\n          categoryId: res.data[0].categoryId,\n        });\n        this.setState({ isLoading: false });\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n\n  fetchCategories = () => {\n    this.setState({ categoriesLoading: true });\n    axios\n      .get(`http://localhost:4000/category`)\n      .then((res) => {\n        this.setState({ categories: res.data });\n        this.setState({ categoriesLoading: false });\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  getCategoryById = () => {\n    this.setState({\n      categoryLoading: true,\n    });\n    axios\n      .get(`http://localhost:4000/category/${this.state.categoryId}`)\n      .then((res) => {\n        this.setState({\n          categoryName: res.data[0].name,\n        });\n        this.setState({ categoryLoading: false });\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n  handleSubmit = () => {\n    let task = {\n      title: this.state.title,\n      Date: moment(this.state.date).unix(),\n      description: this.state.description,\n      image: this.state.image,\n      categoryId: this.state.categoryId,\n    };\n\n    axios\n      .put(`http://localhost:4000/tasks/${this.props.id}`, { task })\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleImageChange = (e) => {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        image: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n  handleQuillChange(value) {\n    this.setState({ description: value });\n  }\n  handleSelect = (e) => {\n    this.setState({ categoryId: e.target.value });\n  };\n  render() {\n    const { title, date, description } = this.state;\n    if (this.state.isLoading) return <p>Loading</p>;\n\n    return (\n      <Modal show={this.props.isModalOpen} onHide={this.props.closeModal}>\n        <ModalHeader>\n          <h2>Create task</h2>\n          <span onClick={this.props.closeModal}>X</span>\n        </ModalHeader>\n        <div className=\"modal_content_holder\">\n          <label>Title</label>{\" \"}\n          <RecipeImageUploader\n            handleImageChange={this.handleImageChange}\n            imagePreviewUrl={this.state.image}\n          />\n          <input\n            onChange={this.handleChange}\n            name=\"title\"\n            type=\"text\"\n            value={title}\n          />\n          <label>Date</label>{\" \"}\n          <input\n            onChange={this.handleChange}\n            name=\"date\"\n            type=\"text\"\n            value={date}\n          />\n          <label>Description</label>\n          <TextEditor\n            placeholder={\"Започнете да пишете...\"}\n            label={\"Enter description\"}\n            value={description}\n            onTextEditorChange={(text) => this.handleQuillChange(text)}\n          />{\" \"}\n          <select onChange={this.handleSelect} value={this.state.categoryId}>\n            <option value=\"\"> Choose category</option>\n            {this.state.categories.map((category, index) => {\n              return (\n                <option key={index} value={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n          <button onClick={this.handleSubmit}>Submit</button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskEditContainer;\n"]},"metadata":{},"sourceType":"module"}