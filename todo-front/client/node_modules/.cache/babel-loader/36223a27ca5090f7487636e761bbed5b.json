{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/contacts/list/ContactsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"./../../../packages/modals/DeleteModal\";\nimport axios from \"axios\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactsList = props => {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedContactToDelete, setSelectedContactToDelete] = useState(\"\");\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  const getContacts = () => {\n    setIsLoading(true);\n    axios.get(`http://localhost:4000/contacts`).then(res => {\n      setContacts(res.data);\n      setIsLoading(false);\n    }).catch(e => console.error(e));\n  };\n\n  const deleteContact = contact => {\n    axios.delete(`http://localhost:4000/contacts/${contact}`).then(res => {\n      window.location.reload();\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = contact => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedContactToDelete(contact);\n  };\n\n  const tableCells = (cell, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: cell.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: cell.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: cell.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: cell.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(UserLayout, {\n      children: /*#__PURE__*/_jsxDEV(ListRow, {\n        dataList: contacts,\n        listRowTitle: \"Контакти\",\n        toggleDeleteModal: toggleDeleteModal,\n        isEditable: false,\n        tableCells: tableCells,\n        tableHeads: [\"#\", \"Име\", \"Фамилия\", \"Телефон\", \"Имейл\", \"Опции\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOpenDeleteModal === true && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      isModalOpen: isOpenDeleteModal,\n      closeModal: () => toggleDeleteModal(selectedContactToDelete),\n      deleteData: () => deleteContact(selectedContactToDelete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsList, \"c5VsCNyZcu90FnITh+dE0j9Wto8=\");\n\n_c = ContactsList;\nexport default ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/contacts/list/ContactsList.js"],"names":["React","useEffect","useState","UserLayout","DeleteModal","axios","ListRow","ContactsList","props","contacts","setContacts","isLoading","setIsLoading","isOpenDeleteModal","setIsOpenDeleteModal","selectedContactToDelete","setSelectedContactToDelete","getContacts","get","then","res","data","catch","e","console","error","deleteContact","contact","delete","window","location","reload","toggleDeleteModal","tableCells","cell","index","name","surname","phone","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UserLayout from \"../../../packages/userLayout/UserLayout\";\nimport DeleteModal from \"./../../../packages/modals/DeleteModal\";\nimport axios from \"axios\";\nimport ListRow from \"../../../packages/listRow/ListRow\";\n\nconst ContactsList = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false);\n  const [selectedContactToDelete, setSelectedContactToDelete] = useState(\"\");\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  const getContacts = () => {\n    setIsLoading(true);\n    axios\n      .get(`http://localhost:4000/contacts`)\n      .then((res) => {\n        setContacts(res.data);\n        setIsLoading(false);\n      })\n      .catch((e) => console.error(e));\n  };\n  const deleteContact = (contact) => {\n    axios.delete(`http://localhost:4000/contacts/${contact}`).then((res) => {\n      window.location.reload();\n    });\n    window.location.reload();\n  };\n\n  const toggleDeleteModal = (contact) => {\n    setIsOpenDeleteModal(!isOpenDeleteModal);\n    setSelectedContactToDelete(contact);\n  };\n  const tableCells = (cell, index) => {\n    return (\n      <>\n        <td> {index + 1}</td>\n        <td>{cell.name}</td>\n        <td>{cell.surname}</td>\n        <td>{cell.phone}</td>\n        <td>{cell.email}</td>\n      </>\n    );\n  };\n  if (isLoading) return <div>Loading...</div>;\n  return (\n    <div className=\"page_wrapper\">\n      <UserLayout>\n        <ListRow\n          dataList={contacts}\n          listRowTitle={\"Контакти\"}\n          toggleDeleteModal={toggleDeleteModal}\n          isEditable={false}\n          tableCells={tableCells}\n          tableHeads={[\"#\", \"Име\", \"Фамилия\", \"Телефон\", \"Имейл\", \"Опции\"]}\n        />\n      </UserLayout>\n      {isOpenDeleteModal === true && (\n        <DeleteModal\n          isModalOpen={isOpenDeleteModal}\n          closeModal={() => toggleDeleteModal(selectedContactToDelete)}\n          deleteData={() => deleteContact(selectedContactToDelete)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContactsList;\n"]},"metadata":{},"sourceType":"module"}