{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo-front/client/src/modules/user/register/RegisterContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterContainer = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [id, setId] = useState(uuidv4());\n  const [password2, setPassword2] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [{\n    user\n  }, dispatch] = useContext(UserContext);\n\n  const validateForm = () => {\n    let isValid = true;\n\n    if (username.length <= 3 || username.length >= 20) {\n      isValid = false;\n      setUsernameError(\"Please, enter valid username.\");\n    }\n\n    if (password.length <= 1 || password2 !== password) {\n      isValid = false;\n      setPasswordError(\"Please, enter password.\");\n    }\n\n    return isValid;\n  };\n\n  const resetForm = () => {\n    setPasswordError(\"\");\n    setUsernameError(\"\");\n  };\n\n  const handleSubmit = () => {\n    let isRegisterFormValid = validateForm();\n\n    if (!isRegisterFormValid) {\n      return;\n    }\n\n    resetForm();\n    let user = {\n      username: username,\n      password: password,\n      id: id,\n      role: \"USER\"\n    };\n    axios.post(`http://localhost:4000/user/register`, {\n      user\n    }).then(res => {\n      Login();\n    }).catch(err => {\n      setError(err.response.data.message);\n      console.log(err.response);\n    });\n  };\n\n  const Login = () => {\n    let user = {\n      username: username,\n      password: password\n    };\n    axios.post(`http://localhost:4000/user/login`, {\n      user\n    }).then(res => {\n      setUser(res.data[0]);\n      window.location.assign(\"/\");\n    }).catch(err => {\n      setError(err.response.data.message);\n      console.log(err.response);\n    });\n  };\n\n  const handleUserChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const handlePassword2Change = e => {\n    setPassword2(e.target.value);\n  };\n\n  const setUser = user => {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterForm, {\n    username: username,\n    password: password,\n    handleSubmit: handleSubmit,\n    handleUserChange: handleUserChange,\n    handlePasswordChange: handlePasswordChange,\n    handlePassword2Change: handlePassword2Change,\n    password2: password2,\n    usernameError: usernameError,\n    passwordError: passwordError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterContainer, \"P0NNCBeSyd2TjoldWy3ab0OZEso=\");\n\n_c = RegisterContainer;\nexport default RegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterContainer\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo-front/client/src/modules/user/register/RegisterContainer.js"],"names":["React","useContext","useState","axios","RegisterForm","SET_USER","v4","uuidv4","UserContext","RegisterContainer","props","username","setUsername","password","setPassword","id","setId","password2","setPassword2","usernameError","setUsernameError","passwordError","setPasswordError","error","setError","user","dispatch","validateForm","isValid","length","resetForm","handleSubmit","isRegisterFormValid","role","post","then","res","Login","catch","err","response","data","message","console","log","setUser","window","location","assign","handleUserChange","e","target","value","handlePasswordChange","handlePassword2Change","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport { SET_USER } from \"../store/actionTypes/UserActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport UserContext from \"../../../utils/UserContext\";\n\nconst RegisterContainer = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [id, setId] = useState(uuidv4());\n  const [password2, setPassword2] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [{ user }, dispatch] = useContext(UserContext);\n\n  const validateForm = () => {\n    let isValid = true;\n    if (username.length <= 3 || username.length >= 20) {\n      isValid = false;\n      setUsernameError(\"Please, enter valid username.\");\n    }\n    if (password.length <= 1 || password2 !== password) {\n      isValid = false;\n      setPasswordError(\"Please, enter password.\");\n    }\n\n    return isValid;\n  };\n  const resetForm = () => {\n    setPasswordError(\"\");\n    setUsernameError(\"\");\n  };\n  const handleSubmit = () => {\n    let isRegisterFormValid = validateForm();\n\n    if (!isRegisterFormValid) {\n      return;\n    }\n\n    resetForm();\n    let user = {\n      username: username,\n      password: password,\n      id: id,\n      role: \"USER\",\n    };\n    axios\n      .post(`http://localhost:4000/user/register`, { user })\n      .then((res) => {\n        Login();\n      })\n      .catch((err) => {\n        setError(err.response.data.message);\n        console.log(err.response);\n      });\n  };\n  const Login = () => {\n    let user = {\n      username: username,\n      password: password,\n    };\n    axios\n      .post(`http://localhost:4000/user/login`, { user })\n      .then((res) => {\n        setUser(res.data[0]);\n        window.location.assign(\"/\");\n      })\n      .catch((err) => {\n        setError(err.response.data.message);\n        console.log(err.response);\n      });\n  };\n  const handleUserChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const handlePassword2Change = (e) => {\n    setPassword2(e.target.value);\n  };\n  const setUser = (user) => {\n    dispatch({\n      type: SET_USER,\n      payload: { user },\n    });\n  };\n\n  return (\n    <RegisterForm\n      username={username}\n      password={password}\n      handleSubmit={handleSubmit}\n      handleUserChange={handleUserChange}\n      handlePasswordChange={handlePasswordChange}\n      handlePassword2Change={handlePassword2Change}\n      password2={password2}\n      usernameError={usernameError}\n      passwordError={passwordError}\n    />\n  );\n};\n\nexport default RegisterContainer;\n"]},"metadata":{},"sourceType":"module"}