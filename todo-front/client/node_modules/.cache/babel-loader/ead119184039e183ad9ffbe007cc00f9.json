{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u041F\\u043B\\u043E\\u0442/projects/todo/todo-front/client/src/modules/category/filteredCategoryList/FilteredCategoryListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport FilteredCategoryList from \"./components/FilteredCategoryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilteredCategoryListContainer = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n  useEffect(() => {\n    fetchRecipes();\n    fetchCategories();\n  }, [props.match.params.name]);\n\n  const fetchRecipes = () => {\n    setisLoading(true);\n    axios.get(`http://localhost:4000/tasks`).then(res => {\n      const filteredRecipes = res.data.filter(recipe => recipe.id === props.match.params.id);\n      setRecipes(filteredRecipes);\n      {\n        console.log(filteredRecipes);\n      }\n      setisLoading(false);\n    }).catch(e => console.error(e));\n  };\n\n  const fetchCategories = () => {\n    setCategoriesLoading(true);\n    axios.get(`http://localhost:4000/category`).then(res => {\n      const filteredCategories = res.data.filter(category => category.name === props.match.params.name);\n      setCategories(filteredCategories);\n      setCategoriesLoading(false);\n    }).catch(e => console.error(e));\n  };\n\n  if (isLoading || categoriesLoading) return null;\n  return /*#__PURE__*/_jsxDEV(FilteredCategoryList, {\n    categories: categories,\n    recipes: recipes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FilteredCategoryListContainer, \"OP4+fxCVUKs0wkVmEZlrWG7zsvk=\");\n\n_c = FilteredCategoryListContainer;\nFilteredCategoryListContainer.propTypes = {};\nexport default _c2 = withRouter(FilteredCategoryListContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilteredCategoryListContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/user/Плот/projects/todo/todo-front/client/src/modules/category/filteredCategoryList/FilteredCategoryListContainer.js"],"names":["React","useEffect","useState","axios","withRouter","FilteredCategoryList","FilteredCategoryListContainer","props","recipes","setRecipes","isLoading","setisLoading","categories","setCategories","categoriesLoading","setCategoriesLoading","fetchRecipes","fetchCategories","match","params","name","get","then","res","filteredRecipes","data","filter","recipe","id","console","log","catch","e","error","filteredCategories","category","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;;;AAEA,MAAMC,6BAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,IAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY;AACZC,IAAAA,eAAe;AAChB,GAHQ,EAGN,CAACV,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,IAApB,CAHM,CAAT;;AAKA,QAAMJ,YAAY,GAAG,MAAM;AACzBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,KAAK,CACFkB,GADH,CACQ,6BADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,eAAe,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAT,CACrBC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcrB,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBS,EADvB,CAAxB;AAGAnB,MAAAA,UAAU,CAACe,eAAD,CAAV;AACE;AAACK,QAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;AAA6B;AAChCb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATH,EAUGoB,KAVH,CAUUC,CAAD,IAAOH,OAAO,CAACI,KAAR,CAAcD,CAAd,CAVhB;AAWD,GAbD;;AAcA,QAAMf,eAAe,GAAG,MAAM;AAC5BF,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAZ,IAAAA,KAAK,CACFkB,GADH,CACQ,gCADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMW,kBAAkB,GAAGX,GAAG,CAACE,IAAJ,CAASC,MAAT,CACxBS,QAAD,IAAcA,QAAQ,CAACf,IAAT,KAAkBb,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,IAD1B,CAA3B;AAGAP,MAAAA,aAAa,CAACqB,kBAAD,CAAb;AACAnB,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,KARH,EASGgB,KATH,CASUC,CAAD,IAAOH,OAAO,CAACI,KAAR,CAAcD,CAAd,CAThB;AAUD,GAZD;;AAaA,MAAItB,SAAS,IAAII,iBAAjB,EAAoC,OAAO,IAAP;AACpC,sBAAO,QAAC,oBAAD;AAAsB,IAAA,UAAU,EAAEF,UAAlC;AAA8C,IAAA,OAAO,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMF,6B;;KAAAA,6B;AA0CNA,6BAA6B,CAAC8B,SAA9B,GAA0C,EAA1C;AAEA,qBAAehC,UAAU,CAACE,6BAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport FilteredCategoryList from \"./components/FilteredCategoryList\";\n\nconst FilteredCategoryListContainer = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  useEffect(() => {\n    fetchRecipes();\n    fetchCategories();\n  }, [props.match.params.name]);\n\n  const fetchRecipes = () => {\n    setisLoading(true);\n    axios\n      .get(`http://localhost:4000/tasks`)\n      .then((res) => {\n        const filteredRecipes = res.data.filter(\n          (recipe) => recipe.id === props.match.params.id\n        );\n        setRecipes(filteredRecipes);\n          {console.log(filteredRecipes)}\n        setisLoading(false);\n      })\n      .catch((e) => console.error(e));\n  };\n  const fetchCategories = () => {\n    setCategoriesLoading(true);\n    axios\n      .get(`http://localhost:4000/category`)\n      .then((res) => {\n        const filteredCategories = res.data.filter(\n          (category) => category.name === props.match.params.name\n        );\n        setCategories(filteredCategories);\n        setCategoriesLoading(false);\n      })\n      .catch((e) => console.error(e));\n  };\n  if (isLoading || categoriesLoading) return null;\n  return <FilteredCategoryList categories={categories} recipes={recipes} />;\n};\n\nFilteredCategoryListContainer.propTypes = {};\n\nexport default withRouter(FilteredCategoryListContainer);\n"]},"metadata":{},"sourceType":"module"}